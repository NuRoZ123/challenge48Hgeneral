---
- name: Configure host
  hosts: docker
  tasks:
    - name: "[Requirements] Apt remove" 
      become: true
      ansible.builtin.apt:
        autoremove: true
        name:
          - apache2
        state: absent

    - name: "[Requirements] Apt install"
      become: true
      ansible.builtin.apt:
        name:
          - software-properties-common
          - openjdk-8-jre-headless
        state: present
        update_cache: yes
        install_recommends: yes

    - name : "[Node] Check node"
      shell: |
        node -v
      args:
        executable: /bin/bash
      register: node_installed
      failed_when: node_installed.rc == -1
      changed_when: node_installed.rc == -1

    - name:  "[Node] Download and install NVM"
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
      when: node_installed.rc != 0

    - name: "[Node] Make the nvm bash script executable"
      shell: |
        chmod +x ~/.nvm/nvm.sh
      when: node_installed.rc != 0

    - name: "[Node] Install Node Versions"
      shell: |
        source ~/.nvm/nvm.sh && nvm install 16.16.0
      args:
        executable: /bin/bash
      when: node_installed.rc != 0

    - name: "[Docker] Add Docker GPG apt Key"
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: "[Docker] Add Docker Repository"
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: "[Docker] Update apt and install docker-ce"
      become: true
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: "[Docker] Add the user to the Docker group"
      become: true
      ansible.builtin.user:
        name: adminuser
        group: docker

    - name: "[Install] Crate Mysql directory"
      become: true
      ansible.builtin.file:
        path: /mysql
        state: directory
        mode: '0755'
        owner: adminuser

    - name: "[Install] Copy the back directory"
      become: true
      ansible.builtin.copy:
        src: ../../
        dest: /home/adminuser/Challenge48h/
        owner: adminuser

    - name: "[Install] Copy the front directory"
      become: true
      ansible.builtin.copy:
        src: ../../../challenge48hFront/
        dest: /home/adminuser/challenge48hFront/
        owner: adminuser

    - name: "[Config] Set variables"
      shell: |
        IP=$(curl -4 icanhazip.com)
        sed -i -e 's/VUE_APP_IP_API=.*/VUE_APP_IP_API='$IP'/g' ../../challenge48hFront/.env"
        sed -i -e 's/ip=.*/ip='$IP'/g' ../../Challenge48h/.env"
      args:
        chdir: ~/Challenge48h/docker
      register: certbot
      failed_when: certbot.rc == -1
      tags:
        - temp

    - name: "[Run] Run certbot script"
      shell: |
        chmod +x ./certbot.sh && ./certbot.sh
      args:
        chdir: ~/Challenge48h/docker
      register: certbot
      failed_when: certbot.rc == -1
      tags:
        - temp

    - name: "[Run] Start containers"
      shell: |
        docker compose down ; docker compose up -d
      args:
        chdir: ~/Challenge48h/infrastructure/docker
      tags:
        - temp
